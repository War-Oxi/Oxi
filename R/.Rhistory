sample(1:10, 10, replace=TRUE, prob=c(100,0,0,0,0,0,0,0,0,10))
sample(1:10, 10, replace=TRUE, prob=c(100,0,0,0,0,0,0,0,0,10))
sample(1:10, 10, replace=TRUE, prob=c(100,0,0,0,0,0,0,0,0,10))
sample(1:10, 10, replace=TRUE, prob=c(100,0,0,0,0,0,0,0,0,10))
sample(1:10, 10, replace=TRUE, prob=c(100,0,0,0,0,0,0,0,0,50))
sample(1:10, 10, replace=TRUE, prob=c(100,0,0,0,0,0,0,0,0,50))
sample(1:10, 10, replace=TRUE, prob=c(100,0,0,0,0,0,0,0,0,50))
sample(1:10, 10, replace=TRUE, prob=c(100,0,0,0,0,0,0,0,0,50))
sample(1:10, 10, replace=TRUE, prob=c(100,0,0,0,0,0,0,0,0,50))
sample(1:10, 10, replace=TRUE, prob=c(100,0,0,0,0,0,0,0,0,75))
sample(1:10, 10, replace=TRUE, prob=c(100,0,0,0,0,0,0,0,0,75))
sample(1:10, 10, replace=TRUE, prob=c(100,0,0,0,0,0,0,0,0,75))
install.packages("sampling")
library(sampling)
salary <- read.csv("regdata.csv")
head(salary)
plot(salary$Incentive[salary$negotiated==TRUE], salary$Salary[salary$negotiated==TRUE])
plot(salary$Incentive[salary$negotiated==TRUE])
plot(salary$Incentive[salary$negotiated==TRUE], salary$Salary[salary$negotiated==TRUE])
dpois
dpois(3, 5)
dpois(4, 5)
dpois(5, 5)
dpois(5, 4)
dpois(100, 2)
dpois(100, 5)
dpois(100, 20)
dpois(100, 100)
dpois(100, 5000)
dpois(100, 500)
dpois(100, 500)
plot(density(rnorm(1000000, 0, 10)))
plot(density(rnorm(1000000, 5, 10)))
plot(density(rnorm(1000000, 100, 10)))
plot(density(rnorm(1000000, 200, 10)))
plot(density(rnorm(1000000, 0, 5)))
plot(density(rnorm(1000000, 0, 50)))
plot(density(rnorm(1000000, 0, 60)))
plot(density(rnorm(1000000, 0, 200)))
plot(density(rnorm(1000000, 0, 500)))
plot(density(rnorm(1000000, 0, 1)))
plot(density(rnorm(1000000, 0, 200)))
plot(density(rnorm(1000000, 0, 100)))
plot(density(rnorm(1000000, 0, 20)))
plot(density(rnorm(1000000, 0, 20)))
plot(density(rnorm(1000000, 0, 20)))
plot(density(rnorm(1000000, 0, 20)))
plot(density(rnorm(1000000, 0, 20)))
plot(dpois(x=c(0,1,2,3,4,5,6,7,8,9,10), lambda=3), type='h')
plot(dpois(x=c(0,1,2,3,4,5,6,7,8,9,10), lambda=8), type='h')
plot(dpois(x=c(0,1,2,3,4,5,6,7,8,9,10), lambda=12), type='h')
rnorm(4,mean=3, sd=3)
y <- rnorm(200)
hist(y)
a <- c(980, 1008, 968, 1032, 1012, 996, 1021, 1002, 996, 1017)
shapiro.test(a)
plot(a)
plot(a.h)
hist(a)
mean(a)
t.test(a, mu=1000, alternative="two.sided")
t.test(a, mu=1000, alternative="two.sided")
t.test(a, mu=1003, alternative="two.sided")
t.test(a, mu=1000, alternative="two.sided")
t.test(a, mu=900, alternative="two.sided")
t.test(a, mu=980, alternative="two.sided")
t.test(a, mu=980, alternative="two.sided")
t.test(a, mu=1003, alternative="two.sided")
t.test(a, mu=1003, alternative="two.sided")
data(iris)
rm =
data(iris)
rm = list(ls)
rm = list=ls()
rm(list=ls())
data(iris)
str(iris)
temp <- c(sample(1:50, 30), sample(51:100, 30), sample(101:150, 30))
temp
iris.training <- iris[temp]
iris.training <- iris[temp,]
View(iris.training)
iris.testing <- iris[-temp,]
library(nnet)
neuralNetResult <- nnet(Spacies~.. data=iris.training, size=3, decay=0)
neuralNetResult <- nnet(Spacies~., data=iris.training, size=3, decay=0)
neuralNetResult <- nnet(Species~., data=iris.training, size=3, decay=0)
neuralNetResult
View(iris.training)
summary(neuralNetResult)
pred <- predict(neuralNetResult, iris.testing, type ="class")
pred
real <- iris.testing$Species
table(real, pred)
temp <- c(sample(1:50, 30), sample(51:100, 30), sample(101:150, 30))
data(iris)
str(iris)
temp <- c(sample(1:50, 30), sample(51:100, 30), sample(101:150, 30))
temp
iris.training <- iris[temp,]
iris.testing <- iris[-temp,]
library(nnet)
neuralNetResult <- nnet(Species~., data=iris.training, size=3, decay=0)
neuralNetResult
summary(neuralNetResult)
pred <- predict(neuralNetResult, iris.testing, type ="class")
pred
real <- iris.testing$Species
table(real, pred)
data(iris)
str(iris)
temp <- c(sample(1:50, 30), sample(51:100, 30), sample(101:150, 30))
temp
iris.training <- iris[temp,]
iris.testing <- iris[-temp,]
library(nnet)
neuralNetResult <- nnet(Species~., data=iris.training, size=3, decay=0)
neuralNetResult
summary(neuralNetResult)
pred <- predict(neuralNetResult, iris.testing, type ="class")
pred
real <- iris.testing$Species
table(real, pred)
data(iris)
str(iris)
temp <- c(sample(1:50, 30), sample(51:100, 30), sample(101:150, 30))
temp
iris.training <- iris[temp,]
iris.testing <- iris[-temp,]
library(nnet)
neuralNetResult <- nnet(Species~., data=iris.training, size=3, decay=0)
neuralNetResult
summary(neuralNetResult)
pred <- predict(neuralNetResult, iris.testing, type ="class")
pred
real <- iris.testing$Species
table(real, pred)
data(iris)
str(iris)
temp <- c(sample(1:50, 30), sample(51:100, 30), sample(101:150, 30))
temp
iris.training <- iris[temp,]
iris.testing <- iris[-temp,]
library(nnet)
neuralNetResult <- nnet(Species~., data=iris.training, size=3, decay=0)
neuralNetResult
summary(neuralNetResult)
pred <- predict(neuralNetResult, iris.testing, type ="class")
pred
real <- iris.testing$Species
table(real, pred)
kmeans_result <- kmeans(kris2, 3)
iris2 <- iris
iris2$Species <- NULL
iris2
kmeans_result <- kmeans(kris2, 3)
kmeans_result <- kmeans(iris2, 3)
kmeans_result
kmeans_result <- kmeans(iris2, 5)
kmeans_result
kmeans_result <- kmeans(iris2, 1)
kmeans_result
kmeans_result <- kmeans(iris2, 2)
kmeans_result
kmeans_result <- kmeans(iris2, 8)
kmeans_result
kmeans_result <- kmeans(iris2, 10)
kmeans_result
kmeans_result <- kmeans(iris2, 20)
kmeans_result
kmeans_result <- kmeans(iris2, 500)
kmeans_result <- kmeans(iris2, 30)
kmeans_result <- kmeans(iris2, 500)
kmeans_result
kmeans_result <- kmeans(iris2, 50)
kmeans_result
iris2
kmeans_result <- kmeans(iris2, 150)
kmeans_result <- kmeans(iris2, 140)
kmeans_result
plot(iris2[c("Sepal.Length". "Sepal.Width")], col=kmeans_result)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
kmeans_result <- kmeans(iris2, 3)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
kmeans_result <- kmeans(iris2, 2)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
kmeans_result <- kmeans(iris2, 4)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
kmeans_result
kmeans_result <- kmeans(iris2, 5)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
kmeans_result <- kmeans(iris2, 2)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
kmeans_result <- kmeans(iris2, 3)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
kmeans_result <- kmeans(iris2, 4)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
kmeans_result <- kmeans(iris2, 4)
kmeans_result
kmeans_result <- kmeans(iris2, 4)
kmeans_result
kmeans_result <- kmeans(iris2, 4)
kmeans_result
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
kmeans_result <- kmeans(iris2, 4)
kmeans_result
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
kmeans_result <- kmeans(iris2, 4)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
kmeans_result <- kmeans(iris2, 4)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
kmeans_result <- kmeans(iris2, 4)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
kmeans_result <- kmeans(iris2, 4)
plot(iris2[c("Sepal.Length", "Sepal.Width")], col=kmeans_result$cluster)
$nc
install.packages("fpc")
library(fpc)
pamk_result <- pamk(iris2)
pamk_result
pamk_result$nc
table(pamk_result$pamobject)
table(pamk_result$pamobject$clustering, iris$Species)
layout(matrix(c(1,2),1,2))
plot(pamk_result$pamobject)
XValue <- seq(from=0, to=4, by=0.05)
YValue <- sin(XValue)
XValue
YValue
sin(20)
sin(25)
sin(23)
sin(2)
sin(3)
sin(0.25)
sin(0.26)
sin(0.9)
sin(0.8)
sin(1)
sin(1.5)
sin(1.6)
sin(1.7)
sin(1.8)
sin(1.65)
sin(1.66)
sin(1.63)
sin(1.64)
sin(1.62)
sin(1.61)
sin(1.611)
sin(1.615)
sin(1.61)
sin(1.6)
sin(1.59)
sin(1.58)
sin(1.57)
sin(1.56)
sin(1.575)
sin(1.579)
sin(1.571)
library(rpart)
rpartTree <- rpart(Spacies~., data=iris)
rpartTree <- rpart(Species~., data=iris)
rpartTree
n=150
rpartTree
rpartTree <- rpart(Species~., data=iris)
plot(rpartTree, margin=.1)
plot(rpartTree, margin=1)
plot(rpartTree, margin=.1)
plot(rpartTree, margin=0.1)
plot(rpartTree, margin=0.01)
plot(rpartTree, margin=0.1)
plot(rpartTree, margin=1)
plot(rpartTree, margin=0.1)
plot(rpartTree, margin=.1)
text(rpartTree, cex=1)
text(rpartTree, cex=2)
text(rpartTree, cex=1)
plot(rpartTree, margin=.1)
text(rpartTree, cex=1)
predict(rpartTree, newdata = iris, type="class")
predicted <- predict(rpartTree, newdata = iris, type="class")
sum(predicted == iris$Species) / nrow(predicted)
sum(predicted == iris$Species) / NROW(predicted)
sum(predicted == iris$Species) / NROW(predicted)
nrow(predicted)
NROW(predicted)
str(iris)
set.seed(1567)
num <- sample(2, nrow(iris), replace=TRUE, prob=c(0.7, 0.3))
num
iris
iris
num <- sample(2, nrow(iris), replace=TRUE, prob=c(0.7, 0.3))
num
num[1]
num[2][1]
num[2][1][4]
num[2][2]
num[2][1]
num[2][4]
num[4][4]
num[4][1]
num[4][2]
trainData <- iris[num==1,]
trainData
NROW(trainData)
nrow(trainData)
head(trainData)
sample(5, 4)
sample(5, 5)
sample(5, 6)
sample(7, 6)
a <- sample(7, 6)
sample(7, 6)
sample(7, 6, replace=TRUE)
sample(7, 6, replace=TRUE, prob = c(0.1, 0.2))
sample(7, 6, replace=TRUE, prob=(1,2,3,4,5,6,7)
sample(7, 6, replace=TRUE, prob=(1,2,3,4,5,6,7))
sample(7, 6, replace=TRUE, prob=c(1,2,3,4,5,6,7))
sample(7, 6, replace=TRUE, prob=c(1,2,3,4,5,6))
sample(7, 6, replace=TRUE, prob=c(1,2,3,4,5,6,70))
sample(7, 6, replace=TRUE, prob=c(1,2,3,4,5,6,70))
sample(7, 6, replace=TRUE, prob=c(1,2,3,4,5,6,70))
sample(7, 6, replace=TRUE, prob=c(1,2,3,4,5,6,99))
sample(7, 6, replace=TRUE, prob=c(1,2,3,4,5,6,99))
sample(7, 6, replace=TRUE, prob=c(1,2,3,4,5,6,99))
sample(7, 6, replace=TRUE, prob=c(1,2,3,4,5,6,99))
sample(7, 6, replace=TRUE, prob=c(1,2,3,4,5,6,99))
sample(7, 6, replace=TRUE, prob=c(1,2,3,4,5,6,99))
sample(7, 6, replace=TRUE, prob=c(1,2,3,4,5,6,99))
testData
testData <- iris[num == 2,]
head(testData)
head(iris)
ctreeResult <- ctree(myF, data=trainData)
ctreeResult <- ctree(myF, data=trainData)
library(party)
install.packages(party)
install.packages("party)
""
""
install.packages("party")
ctree
libarary(patty)
library(patty)
library(party)
ctree()
ctreeResult <- ctree(myF, data=trainData)
myF <- Species~Sepal.Length+Sepal.Width+Petal.Length+Petal.Width
ctreeResult <- ctree(myF, data=trainData)
table(predict(ctreeResult), trainData$Spacies)
table(predict(ctreeResult), trainData$Species)
plot(ctreeResult)
ctreeResult
ctreeResult
plot(ctreeResult)
table(predict(ctreeResult),trainData$Species)
forcasted <- predict(ctreeResult, data=testData)
table(forcasted, testData$Species)
str(iris)
set.seed(1567)
trainData <- iris[num==1,]
testData <- iris[num==2,]
myF <- Species~Sepal.Length+Sepal.Width+Petal.Length+Petal.Width
ctreeResult <- ctree(myF, data=trainData)
table(predict(ctreeResult), trainData$Species)
forcasted <- predict(ctreeResult, data=testData)
table(forcasted, testData$Species)
NROW(forcasted)
NROW(testData$Species)
data1 <- iris[sample(1:nrow(iris), replace=T),]
data1
NROW(data1)
data2 <- iris[sample(1:nrow(iris), replace=T),]
data3 <- iris[sample(1:nrow(iris), replace=T),]
data4 <- iris[sample(1:nrow(iris), replace=T),]
data5 <- iris[sample(1:nrow(iris), replace=T),]
ctree1 <- ctree(Species~., data1)
ctree2 <- ctree(Species~., data2)
ctree3 <- ctree(Species~., data3)
ctree4 <- ctree(Species~., data4)
ctree5 <- ctree(Species~., data5)
predicted1 <- predict(ctree1, iris)
table(predicted1)
predicted1 <- predict(ctree2, iris)
table(predicted1)
table(predicted2)
predicted1 <- predict(ctree1, iris)
predicted2 <- predict(ctree2, iris)
predicted3 <- predict(ctree3, iris)
predicted4 <- predict(ctree4, iris)
predicted5 <- predict(ctree5, iris)
table(predicted1)
table(predicted2)
table(predicted3)
table(predicted4)
table(predicted5)
test <- data.frame(Species=iris$Species, predicted1,predicted2,predicted3,predicted4,predicted5)
head(test)
nrow(test)
test
funcResultValue <- function(x) {}
xtab <- table(t(x[i,]))
funcResultValue <- function(x) {
result <- NULL
for(i in 1:nrow(x)){
xtab <- table(t(x[i,]))
rvalue <- names(sort(xtab, decreasing = T)[1])
result <- c(result,rvalue)
}
return(result)
}
test$result <- funcResultValue(test[, 2:6])
table(test$result, test$Species)
plot(ctree3)
plot(ctree4)
plot(ctree5)
plot(test)
plot(test$result)
plot(test$result, test$Species)
plot(test)
iris
install.packages("fpc")
library(fpc)
rm(list=ls())
iris2 <- iris
iris2$Species <- NULL
iris2
pamk_result <- pamk(iris2)
pamk_result
pamk_result$nc
table(pamk_result$pamobject$clustering, iris$Species)
layout(matrix(c(1,2),1,2))
plot(pamk_result$pamobject)
pamk_result <- pamk(iris2,3)
pamk_result
pamk_result$nc
table(pamk_result$pamobject$clustering, iris$Species)
layout(matrix(c(1,2),1,2))
plot(pamk_result$pamobject)
pamk_result <- pamk(iris2,4)
pamk_result
pamk_result$nc
table(pamk_result$pamobject$clustering, iris$Species)
layout(matrix(c(1,2),1,2))
plot(pamk_result$pamobject)
pamk_result <- pamk(iris2,4)
pamk_result
pamk_result
pamk_result
pamk_result <- pamk(iris2,4)
pamk_result
pamk_result$nc
table(pamk_result$pamobject$clustering, iris$Species)
layout(matrix(c(1,2),1,2))
plot(pamk_result$pamobject)
pamk_result <- pamk(iris2,5)
pamk_result <- pamk(iris2,6)
pamk_result <- pamk(iris2,6)
pamk_result
pamk_result$nc
table(pamk_result$pamobject$clustering, iris$Species)
layout(matrix(c(1,2),1,2))
plot(pamk_result$pamobject)
pamk_result <- pamk(iris2,6)
pamk_result
pamk_result$nc
table(pamk_result$pamobject$clustering, iris$Species)
layout(matrix(c(1,2),1,2))
plot(pamk_result$pamobject)
pamk_result <- pamk(iris2,2)
pamk_result
pamk_result$nc
table(pamk_result$pamobject$clustering, iris$Species)
layout(matrix(c(1,2),1,2))
plot(pamk_result$pamobject)
pamk_result <- pamk(iris2,6)
pamk_result
pamk_result$nc
table(pamk_result$pamobject$clustering, iris$Species)
layout(matrix(c(1,2),1,2))
plot(pamk_result$pamobject)
pamk_result <- pamk(iris2,3)
pamk_result
pamk_result$nc
table(pamk_result$pamobject$clustering, iris$Species)
layout(matrix(c(1,2),1,2))
plot(pamk_result$pamobject)
pie(T_sales, init.angle=90, col=rainbow(length(T_sales)), labels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
pie(T_sales, init.angle=90, col=rainbow(length(T_sales)), labels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
T_sales <- c(210, 110, 440, 550, 700, 130)
pie(T_sales, init.angle=90, col=rainbow(length(T_sales)), labels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
pie(T_sales, init.angle=0, col=rainbow(length(T_sales)), labels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
pie(T_sales, init.angle=180, col=rainbow(length(T_sales)), labels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
pie(T_sales, init.angle=360, col=rainbow(length(T_sales)), labels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
pie(T_sales, init.angle=270, col=rainbow(length(T_sales)), labels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
a <- unit(c(2,4,1,3), "cm")
a
margin
x <- rnorm(50)
y <- runif(30)
x
y
hist(x)
hist(y)
host(x)
hist(X)
hist(x)
